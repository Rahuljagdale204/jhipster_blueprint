import inquirer from 'inquirer';
import type Generator from 'yeoman-generator';
import type Logger from 'yeoman-environment/lib/util/log.js';
export type DummyPromptOptions = {
    callback?: (answers: Generator.Answers) => Generator.Answers;
    throwOnMissingAnswer?: boolean;
};
export declare class DummyPrompt {
    answers: Generator.Answers;
    question: inquirer.Question;
    callback: (answers: Generator.Answers) => Generator.Answers;
    throwOnMissingAnswer: boolean;
    constructor(question: inquirer.Question, _rl: any, answers: Generator.Answers, mockedAnswers?: Generator.Answers, options?: ((answers: Generator.Answers) => Generator.Answers) | DummyPromptOptions);
    run(): Promise<inquirer.Answers>;
}
export declare class TestAdapter {
    promptModule: inquirer.PromptModule;
    diff: any;
    log: typeof Logger;
    constructor(mockedAnswers?: any);
    prompt(questions: any, prefilledAnswers: any): Promise<inquirer.Answers> & {
        ui: inquirer.ui.Prompt<inquirer.Answers>;
    };
}
